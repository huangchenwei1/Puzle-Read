{"version":3,"file":"@radix-ui_react-popover.js","names":["computePosition","platform","detectOverflow","arrow","max","offset","flip","placements","sides","side","placement","overflow","hide","shift","min","limitShift","size","getComputedStyle","offset","offset$1","shift","shift$1","flip","flip$1","size","size$1","hide","hide$1","arrow","arrow$1","limitShift","limitShift$1","useLayoutEffect","platform","data","arrow$1","arrow$2","Arrow","size","ANCHOR_NAME","CONTENT_NAME","arrow","floatingUIarrow","ARROW_NAME","ArrowPrimitive.Root","Root2","PopperPrimitive.Root","PopperPrimitive.Anchor","PortalPrimitive","RemoveScroll","PopperPrimitive.Content","PopperPrimitive.Arrow"],"sources":["../../@floating-ui/utils/dist/floating-ui.utils.mjs","../../@floating-ui/core/dist/floating-ui.core.mjs","../../@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../@floating-ui/dom/dist/floating-ui.dom.mjs","../../@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","../../@radix-ui/react-arrow/dist/index.mjs","../../@radix-ui/react-use-size/dist/index.mjs","../../@radix-ui/react-popper/dist/index.mjs","../../@radix-ui/react-popover/dist/index.mjs"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => getSideAxis(d.placement) === initialSideAxis ? d.overflows[0] > 0 : true)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nconst originSides = /*#__PURE__*/new Set(['left', 'top']);\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = originSides.has(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = originSides.has(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle as getComputedStyle$1, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle$1(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll) {\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - getWindowScrollBarX(documentElement, htmlRect);\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Safety check: ensure the scrollbar space is reasonable in case this\n// calculation is affected by unusual styles.\n// Most scrollbars leave 15-18px of space.\nconst SCROLLBAR_MAX = 25;\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  const windowScrollbarX = getWindowScrollBarX(html);\n  // <html> `overflow: hidden` + `scrollbar-gutter: stable` reduces the\n  // visual width of the <html> but this is not considered in the size\n  // of `html.clientWidth`.\n  if (windowScrollbarX <= 0) {\n    const doc = html.ownerDocument;\n    const body = doc.body;\n    const bodyStyles = getComputedStyle(body);\n    const bodyMarginInline = doc.compatMode === 'CSS1Compat' ? parseFloat(bodyStyles.marginLeft) + parseFloat(bodyStyles.marginRight) || 0 : 0;\n    const clippingStableScrollbarWidth = Math.abs(html.clientWidth - body.clientWidth - bodyMarginInline);\n    if (clippingStableScrollbarWidth <= SCROLLBAR_MAX) {\n      width -= clippingStableScrollbarWidth;\n    }\n  } else if (windowScrollbarX <= SCROLLBAR_MAX) {\n    // If the <body> scrollbar is on the left, the width needs to be extended\n    // by the scrollbar amount so there isn't extra space on the right.\n    width += windowScrollbarX;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst absoluteOrFixed = /*#__PURE__*/new Set(['absolute', 'fixed']);\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle$1(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle$1(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, autoPlacement as autoPlacement$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar isClient = typeof document !== 'undefined';\n\nvar noop = function noop() {};\nvar index = isClient ? useLayoutEffect : noop;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","// src/arrow.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Arrow\";\nvar Arrow = React.forwardRef((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return /* @__PURE__ */ jsx(\n    Primitive.svg,\n    {\n      ...arrowProps,\n      ref: forwardedRef,\n      width,\n      height,\n      viewBox: \"0 0 30 10\",\n      preserveAspectRatio: \"none\",\n      children: props.asChild ? children : /* @__PURE__ */ jsx(\"polygon\", { points: \"0,0 30,0 15,10\" })\n    }\n  );\n});\nArrow.displayName = NAME;\nvar Root = Arrow;\nexport {\n  Arrow,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-size/src/use-size.tsx\nimport * as React from \"react\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nfunction useSize(element) {\n  const [size, setSize] = React.useState(void 0);\n  useLayoutEffect(() => {\n    if (element) {\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n        if (!entries.length) {\n          return;\n        }\n        const entry = entries[0];\n        let width;\n        let height;\n        if (\"borderBoxSize\" in entry) {\n          const borderSizeEntry = entry[\"borderBoxSize\"];\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize[\"inlineSize\"];\n          height = borderSize[\"blockSize\"];\n        } else {\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n        setSize({ width, height });\n      });\n      resizeObserver.observe(element, { box: \"border-box\" });\n      return () => resizeObserver.unobserve(element);\n    } else {\n      setSize(void 0);\n    }\n  }, [element]);\n  return size;\n}\nexport {\n  useSize\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/popper.tsx\nimport * as React from \"react\";\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size\n} from \"@floating-ui/react-dom\";\nimport * as ArrowPrimitive from \"@radix-ui/react-arrow\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SIDE_OPTIONS = [\"top\", \"right\", \"bottom\", \"left\"];\nvar ALIGN_OPTIONS = [\"start\", \"center\", \"end\"];\nvar POPPER_NAME = \"Popper\";\nvar [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\nvar [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);\nvar Popper = (props) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState(null);\n  return /* @__PURE__ */ jsx(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });\n};\nPopper.displayName = POPPER_NAME;\nvar ANCHOR_NAME = \"PopperAnchor\";\nvar PopperAnchor = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const anchorRef = React.useRef(null);\n    React.useEffect(() => {\n      const previousAnchor = anchorRef.current;\n      anchorRef.current = virtualRef?.current || ref.current;\n      if (previousAnchor !== anchorRef.current) {\n        context.onAnchorChange(anchorRef.current);\n      }\n    });\n    return virtualRef ? null : /* @__PURE__ */ jsx(Primitive.div, { ...anchorProps, ref: composedRefs });\n  }\n);\nPopperAnchor.displayName = ANCHOR_NAME;\nvar CONTENT_NAME = \"PopperContent\";\nvar [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);\nvar PopperContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = \"bottom\",\n      sideOffset = 0,\n      align = \"center\",\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = \"partial\",\n      hideWhenDetached = false,\n      updatePositionStrategy = \"optimized\",\n      onPlaced,\n      ...contentProps\n    } = props;\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [content, setContent] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [arrow, setArrow] = React.useState(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n    const desiredPlacement = side + (align !== \"center\" ? \"-\" + align : \"\");\n    const collisionPadding = typeof collisionPaddingProp === \"number\" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries\n    };\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: \"fixed\",\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === \"always\"\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions && shift({\n          mainAxis: true,\n          crossAxis: false,\n          limiter: sticky === \"partial\" ? limitShift() : void 0,\n          ...detectOverflowOptions\n        }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty(\"--radix-popper-available-width\", `${availableWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-available-height\", `${availableHeight}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-width\", `${anchorWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-height\", `${anchorHeight}px`);\n          }\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: \"referenceHidden\", ...detectOverflowOptions })\n      ]\n    });\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const [contentZIndex, setContentZIndex] = React.useState();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        ref: refs.setFloating,\n        \"data-radix-popper-content-wrapper\": \"\",\n        style: {\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : \"translate(0, -200%)\",\n          // keep off the page when measuring\n          minWidth: \"max-content\",\n          zIndex: contentZIndex,\n          [\"--radix-popper-transform-origin\"]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y\n          ].join(\" \"),\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...middlewareData.hide?.referenceHidden && {\n            visibility: \"hidden\",\n            pointerEvents: \"none\"\n          }\n        },\n        dir: props.dir,\n        children: /* @__PURE__ */ jsx(\n          PopperContentProvider,\n          {\n            scope: __scopePopper,\n            placedSide,\n            onArrowChange: setArrow,\n            arrowX,\n            arrowY,\n            shouldHideArrow: cannotCenterArrow,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                \"data-side\": placedSide,\n                \"data-align\": placedAlign,\n                ...contentProps,\n                ref: composedRefs,\n                style: {\n                  ...contentProps.style,\n                  // if the PopperContent hasn't been placed yet (not all measurements done)\n                  // we prevent animations so that users's animation don't kick in too early referring wrong sides\n                  animation: !isPositioned ? \"none\" : void 0\n                }\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nPopperContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"PopperArrow\";\nvar OPPOSITE_SIDE = {\n  top: \"bottom\",\n  right: \"left\",\n  bottom: \"top\",\n  left: \"right\"\n};\nvar PopperArrow = React.forwardRef(function PopperArrow2(props, forwardedRef) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    /* @__PURE__ */ jsx(\n      \"span\",\n      {\n        ref: contentContext.onArrowChange,\n        style: {\n          position: \"absolute\",\n          left: contentContext.arrowX,\n          top: contentContext.arrowY,\n          [baseSide]: 0,\n          transformOrigin: {\n            top: \"\",\n            right: \"0 0\",\n            bottom: \"center 0\",\n            left: \"100% 0\"\n          }[contentContext.placedSide],\n          transform: {\n            top: \"translateY(100%)\",\n            right: \"translateY(50%) rotate(90deg) translateX(-50%)\",\n            bottom: `rotate(180deg)`,\n            left: \"translateY(50%) rotate(-90deg) translateX(50%)\"\n          }[contentContext.placedSide],\n          visibility: contentContext.shouldHideArrow ? \"hidden\" : void 0\n        },\n        children: /* @__PURE__ */ jsx(\n          ArrowPrimitive.Root,\n          {\n            ...arrowProps,\n            ref: forwardedRef,\n            style: {\n              ...arrowProps.style,\n              // ensures the element can be measured correctly (mostly for if SVG)\n              display: \"block\"\n            }\n          }\n        )\n      }\n    )\n  );\n});\nPopperArrow.displayName = ARROW_NAME;\nfunction isNotNull(value) {\n  return value !== null;\n}\nvar transformOrigin = (options) => ({\n  name: \"transformOrigin\",\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: \"0%\", center: \"50%\", end: \"100%\" }[placedAlign];\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n    let x = \"\";\n    let y = \"\";\n    if (placedSide === \"bottom\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === \"top\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === \"right\") {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === \"left\") {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  }\n});\nfunction getSideAndAlignFromPlacement(placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return [side, align];\n}\nvar Root2 = Popper;\nvar Anchor = PopperAnchor;\nvar Content = PopperContent;\nvar Arrow = PopperArrow;\nexport {\n  ALIGN_OPTIONS,\n  Anchor,\n  Arrow,\n  Content,\n  Popper,\n  PopperAnchor,\n  PopperArrow,\n  PopperContent,\n  Root2 as Root,\n  SIDE_OPTIONS,\n  createPopperScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/popover.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId } from \"@radix-ui/react-id\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { hideOthers } from \"aria-hidden\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { jsx } from \"react/jsx-runtime\";\nvar POPOVER_NAME = \"Popover\";\nvar [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope\n]);\nvar usePopperScope = createPopperScope();\nvar [PopoverProvider, usePopoverContext] = createPopoverContext(POPOVER_NAME);\nvar Popover = (props) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: POPOVER_NAME\n  });\n  return /* @__PURE__ */ jsx(PopperPrimitive.Root, { ...popperScope, children: /* @__PURE__ */ jsx(\n    PopoverProvider,\n    {\n      scope: __scopePopover,\n      contentId: useId(),\n      triggerRef,\n      open,\n      onOpenChange: setOpen,\n      onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n      hasCustomAnchor,\n      onCustomAnchorAdd: React.useCallback(() => setHasCustomAnchor(true), []),\n      onCustomAnchorRemove: React.useCallback(() => setHasCustomAnchor(false), []),\n      modal,\n      children\n    }\n  ) });\n};\nPopover.displayName = POPOVER_NAME;\nvar ANCHOR_NAME = \"PopoverAnchor\";\nvar PopoverAnchor = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n    return /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { ...popperScope, ...anchorProps, ref: forwardedRef });\n  }\n);\nPopoverAnchor.displayName = ANCHOR_NAME;\nvar TRIGGER_NAME = \"PopoverTrigger\";\nvar PopoverTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    const trigger = /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": context.open,\n        \"aria-controls\": context.contentId,\n        \"data-state\": getState(context.open),\n        ...triggerProps,\n        ref: composedTriggerRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n    return context.hasCustomAnchor ? trigger : /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: trigger });\n  }\n);\nPopoverTrigger.displayName = TRIGGER_NAME;\nvar PORTAL_NAME = \"PopoverPortal\";\nvar [PortalProvider, usePortalContext] = createPopoverContext(PORTAL_NAME, {\n  forceMount: void 0\n});\nvar PopoverPortal = (props) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return /* @__PURE__ */ jsx(PortalProvider, { scope: __scopePopover, forceMount, children: /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, container, children }) }) });\n};\nPopoverPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"PopoverContent\";\nvar PopoverContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: context.modal ? /* @__PURE__ */ jsx(PopoverContentModal, { ...contentProps, ref: forwardedRef }) : /* @__PURE__ */ jsx(PopoverContentNonModal, { ...contentProps, ref: forwardedRef }) });\n  }\n);\nPopoverContent.displayName = CONTENT_NAME;\nvar Slot = createSlot(\"PopoverContent.RemoveScroll\");\nvar PopoverContentModal = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n    return /* @__PURE__ */ jsx(RemoveScroll, { as: Slot, allowPinchZoom: true, children: /* @__PURE__ */ jsx(\n      PopoverContentImpl,\n      {\n        ...props,\n        ref: composedRefs,\n        trapFocus: context.open,\n        disableOutsidePointerEvents: true,\n        onCloseAutoFocus: composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n        }),\n        onPointerDownOutside: composeEventHandlers(\n          props.onPointerDownOutside,\n          (event) => {\n            const originalEvent = event.detail.originalEvent;\n            const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n            const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n            isRightClickOutsideRef.current = isRightClick;\n          },\n          { checkForDefaultPrevented: false }\n        ),\n        onFocusOutside: composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )\n      }\n    ) });\n  }\n);\nvar PopoverContentNonModal = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n    return /* @__PURE__ */ jsx(\n      PopoverContentImpl,\n      {\n        ...props,\n        ref: forwardedRef,\n        trapFocus: false,\n        disableOutsidePointerEvents: false,\n        onCloseAutoFocus: (event) => {\n          props.onCloseAutoFocus?.(event);\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            event.preventDefault();\n          }\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        },\n        onInteractOutside: (event) => {\n          props.onInteractOutside?.(event);\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === \"pointerdown\") {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n          const target = event.target;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n          if (event.detail.originalEvent.type === \"focusin\" && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }\n      }\n    );\n  }\n);\nvar PopoverContentImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    useFocusGuards();\n    return /* @__PURE__ */ jsx(\n      FocusScope,\n      {\n        asChild: true,\n        loop: true,\n        trapped: trapFocus,\n        onMountAutoFocus: onOpenAutoFocus,\n        onUnmountAutoFocus: onCloseAutoFocus,\n        children: /* @__PURE__ */ jsx(\n          DismissableLayer,\n          {\n            asChild: true,\n            disableOutsidePointerEvents,\n            onInteractOutside,\n            onEscapeKeyDown,\n            onPointerDownOutside,\n            onFocusOutside,\n            onDismiss: () => context.onOpenChange(false),\n            children: /* @__PURE__ */ jsx(\n              PopperPrimitive.Content,\n              {\n                \"data-state\": getState(context.open),\n                role: \"dialog\",\n                id: context.contentId,\n                ...popperScope,\n                ...contentProps,\n                ref: forwardedRef,\n                style: {\n                  ...contentProps.style,\n                  // re-namespace exposed content custom properties\n                  ...{\n                    \"--radix-popover-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n                    \"--radix-popover-content-available-width\": \"var(--radix-popper-available-width)\",\n                    \"--radix-popover-content-available-height\": \"var(--radix-popper-available-height)\",\n                    \"--radix-popover-trigger-width\": \"var(--radix-popper-anchor-width)\",\n                    \"--radix-popover-trigger-height\": \"var(--radix-popper-anchor-height)\"\n                  }\n                }\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nvar CLOSE_NAME = \"PopoverClose\";\nvar PopoverClose = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        ...closeProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, () => context.onOpenChange(false))\n      }\n    );\n  }\n);\nPopoverClose.displayName = CLOSE_NAME;\nvar ARROW_NAME = \"PopoverArrow\";\nvar PopoverArrow = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return /* @__PURE__ */ jsx(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef });\n  }\n);\nPopoverArrow.displayName = ARROW_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root2 = Popover;\nvar Anchor2 = PopoverAnchor;\nvar Trigger = PopoverTrigger;\nvar Portal = PopoverPortal;\nvar Content2 = PopoverContent;\nvar Close = PopoverClose;\nvar Arrow2 = PopoverArrow;\nexport {\n  Anchor2 as Anchor,\n  Arrow2 as Arrow,\n  Close,\n  Content2 as Content,\n  Popover,\n  PopoverAnchor,\n  PopoverArrow,\n  PopoverClose,\n  PopoverContent,\n  PopoverPortal,\n  PopoverTrigger,\n  Portal,\n  Root2 as Root,\n  Trigger,\n  createPopoverScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"mappings":"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"}